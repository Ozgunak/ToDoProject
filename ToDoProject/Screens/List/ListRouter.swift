//
//  ListRouter.swift
//  ToDoProject
//
//  Created by ozgun on 31.01.2022.
//  Copyright (c) 2022 ___ORGANIZATIONNAME___. All rights reserved.
//
//  This file was generated by the Clean Swift Xcode Templates so
//  you can apply clean architecture to your iOS and Mac projects,
//  see http://clean-swift.com
//

import UIKit

@objc protocol ListRoutingLogic {
    func routeToCreateTodo(segue: UIStoryboardSegue?)
}

protocol ListDataPassing {
  var dataStore: ListDataStore? { get }
}

class ListRouter: NSObject, ListRoutingLogic, ListDataPassing {
    
    
  weak var viewController: ListViewController?
  var dataStore: ListDataStore?
  
  // MARK: Routing
  
    func routeToCreateTodo(segue: UIStoryboardSegue?) {
        if segue == nil {
            let storyboard = UIStoryboard(name: "Main", bundle: nil)
            let destinationVC = storyboard.instantiateViewController(withIdentifier: "DetailViewController") as! DetailViewController
            navigateToDetailTodo(source: viewController!, destination: destinationVC)
        }
    }
  //func routeToSomewhere(segue: UIStoryboardSegue?)
  //{
  //  if let segue = segue {
  //    let destinationVC = segue.destination as! SomewhereViewController
  //    var destinationDS = destinationVC.router!.dataStore!
  //    passDataToSomewhere(source: dataStore!, destination: &destinationDS)
  //  } else {
  //    let storyboard = UIStoryboard(name: "Main", bundle: nil)
  //    let destinationVC = storyboard.instantiateViewController(withIdentifier: "SomewhereViewController") as! SomewhereViewController
  //    var destinationDS = destinationVC.router!.dataStore!
  //    passDataToSomewhere(source: dataStore!, destination: &destinationDS)
  //    navigateToSomewhere(source: viewController!, destination: destinationVC)
  //  }
  //}

  // MARK: Navigation
  
  func navigateToDetailTodo(source: ListViewController, destination: DetailViewController)
  {
    source.show(destination, sender: nil)
  }
  
  // MARK: Passing data
  
    func passDataToTodoDetail(source: ListDataStore, destination: inout DetailDataStore) {
        let indexPath : IndexPath = (viewController?.tableView.indexPathForSelectedRow!)!

        let selectedTodo = viewController?.displayedTodos[indexPath[0]]
//        destination.id = selectedTodo?.id
    }
}
